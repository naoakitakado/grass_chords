version: 2.1

orbs:
  ruby: circleci/ruby@1.1.0
  node: circleci/node@2
  aws-cli: circleci/aws-cli@1.2.1
  aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  test:
    parallelism:
    docker:
      - image: circleci/ruby:2.5.1-stretch-node-browsers
        environment:
          RAILS_ENV: test
          BUNDLER_VERSION: 2.1.4
      - image: circleci/mysql:5.7.31
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: grass_chords_test
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: root
    steps:
      - checkout
      - run:
          name: install Chrome
          command: sudo apt-get --only-upgrade install google-chrome-stable
      - run:
          name: install dependencies
          command: |
            gem update --system
            gem install bundler
      - ruby/install-deps
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Database setup
          command: |
            bundle exec rails db:create
            bundle exec rails db:migrate
      - run:
          name: run rspec test
          command: bin/rspec
  build_and_push:
    docker:
      - image: circleci/ruby:2.5.1
        user: root
        environment:
          BUNDLER_VERSION: 2.1.4
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: generate tmporary file
          command: mkdir tmp/pids
      - run:
          name: login docker
          command: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: image build
          command: docker image build -t shotaimoto/grasschords_web:latest .
      - run:
          name: image push
          command: docker push shotaimoto/grasschords_web:latest
workflows:
  version: 2
  build_and_test:
    jobs:
      - test:
          filters:
            branches:
              igunore: master
      - build_and_push:
          requires:
            - test
          filters:
            branches:
              only: master

      - aws-ecs/deploy-service-update:
          requires:
            - build_and_push
          family: $AWS_RESOURCE_NAME_PREFIX
          service-name: $AWS_RESOURCE_NAME_SERVICE
          cluster-name: $AWS_RESOURCE_NAME_CLUSTER
          filters:
            branches:
              only: master
