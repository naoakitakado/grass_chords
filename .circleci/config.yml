version: 2.1

orbs:
  ruby: circleci/ruby@1.1.0
  node: circleci/node@2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.1
        user: root
        environment:
          BUNDLER_VERSION: 2.1.4
    steps:
      - checkout
      - setup_remote_docker
      # - run:
      #     name: login docker
      #     command: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: image build
          command: docker image build -t shotaimoto/grasschords_web:latest .
      # - run:
      #     name: image push
      #     command: docker push shotaimoto/grasschords_web:latest
      # - run:
      #     name: install dependencies
      #     command: |
      #       gem update --system
      #       gem install bundler
      # - ruby/install-deps
      # Store bundle cache
      # - node/install-packages:
      #     pkg-manager: yarn
      #     cache-key: "yarn.lock"
  test:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.5.1
        environment:
          # BUNDLE_JOBS: "3"
          # BUNDLE_RETRY: "3"
          RAILS_ENV: test
      - image: circleci/mysql:8.04
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: grass_chords_test
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: root
    steps:
      - checkout
      - ruby/install-deps
      # - node/install-packages:
      #     pkg-manager: yarn
      #     cache-key: "yarn.lock"
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: |
            bundle exec rails db:create
            bundle exec rails db:migrate
      - run:
          name: run rspec test
          command: bin/rspec
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
